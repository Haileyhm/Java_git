*소수점 원하는 자리까지 출력
-Math.round()

뒤에 곱하기 해서 계산해줘야돼 
-String.format("%.3f",변수명)

*try - catch
*Integer.parseInt()

================
* 상속

-Aclass 와 Bclass 모두에 매서드가 있으면 
Bclass의 매서드 실행시켜도 메모리 상에서는 둘다 실행됨 

-super : 자식클래스의 

-자바는 단일상속만 가능
 부모를 찾아갈 때, 누구꺼를 받아야 하는지 헷갈려

-부모클래스 이름에 자식클래스의 매서드를 담을 수도 있다




클래스이름1 변수 =  -선언한 클래스의 이름대로 판단  / 부모클래스 이름으로도 만들 수 있음 - 이때는 부모클래스의 매서드만 사용할 수 있음
 
new 클래스이름2() ; -인스턴스 생성 


-접근제한자 : private, protected ... 기억만하고 있어/ 다 public으로 만들어도 상관없어

-일반상속과 추상클래스
 -일반상속: A클래스에 a 매서드, B클래스에서 불러서 사용
 -추상클래스(public abstract class): 부모가 추상클래스면 매서드 이름만 만들고, 자식한테 이 매서드 쓰라고 해주는 거임 
                                     ex.게임만들때 교수님이 세가지 매서드로 꼭 사용하라고 한 것과 같은 이치
== 추상클래스 사용 
자식클래스 만들 때, extends 하는 부모클래스가 있어야 해 
그리고 자식클래스명 extends 부모클래스명 쓰면
add unimplemented methods 에러가 뜸

무조건 상속받은 애한테서 기능을 구현/실행시키게 강제하기 위해서 사용
추상화가 끝난 애들만 인스턴스로 만들 수 있음

꼭 필요한 매서드인데, 구체적으로 어떤 내용인지 모를 때 사용
협업시 작성이 꼭 필요한 매서드를 만들도록 강제할 수 있음 
==================
코드리뷰에서 

Figure f = new Figure(); 하면 오버라이드가 메인창에서 뜸. 여기서 임시로 기능을 지정해줘야해 

so, Figure f = null 로 주고 자식클래스에서 불러와서 써 
    f = new 자식클래스(); 로 사용

=============
this
super



==================

*annotation
보조를 하는 역할
ex. @Override 지워도 됨, 원래 있는 변수라는 것의 재정의 해주는 역할 확실하게 알려줌



<실수>
-s.nextDouble(); 도 있음